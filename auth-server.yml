# We need to setup different context root for the auth server so that we can store separate
# cookies for both the API gateway as well as the OAuth2 authorization server.
server:
  port: 8899
  contextPath: /userauth

#
# IMPORTANT NOTICE: 
# You have to replace this keypair and make sure the private key remains private!
#

config:
    oauth2:
        # openssl genrsa -out jwt.pem 2048
        # openssl rsa -in jwt.pem
        privateKey: |
            -----BEGIN RSA PRIVATE KEY-----
            MIICXQIBAAKBgQDNQZKqTlO/+2b4ZdhqGJzGBDltb5PZmBz1ALN2YLvt341pH6i5
            mO1V9cX5Ty1LM70fKfnIoYUP4KCE33dPnC7LkUwE/myh1zM6m8cbL5cYFPyP099t
            hbVxzJkjHWqywvQih/qOOjliomKbM9pxG8Z1dB26hL9dSAZuA8xExjlPmQIDAQAB
            AoGAImnYGU3ApPOVtBf/TOqLfne+2SZX96eVU06myDY3zA4rO3DfbR7CzCLE6qPn
            yDAIiW0UQBs0oBDdWOnOqz5YaePZu/yrLyj6KM6Q2e9ywRDtDh3ywrSfGpjdSvvo
            aeL1WesBWsgWv1vFKKvES7ILFLUxKwyCRC2Lgh7aI9GGZfECQQD84m98Yrehhin3
            fZuRaBNIu348Ci7ZFZmrvyxAIxrV4jBjpACW0RM2BvF5oYM2gOJqIfBOVjmPwUro
            bYEFcHRvAkEAz8jsfmxsZVwh3Y/Y47BzhKIC5FLaads541jNjVWfrPirljyCy1n4
            sg3WQH2IEyap3WTP84+csCtsfNfyK7fQdwJBAJNRyobY74cupJYkW5OK4OkXKQQL
            Hp2iosJV/Y5jpQeC3JO/gARcSmfIBbbI66q9zKjtmpPYUXI4tc3PtUEY8QsCQQCc
            xySyC0sKe6bNzyC+Q8AVvkxiTKWiI5idEr8duhJd589H72Zc2wkMB+a2CEGo+Y5H
            jy5cvuph/pG/7Qw7sljnAkAy/feClt1mUEiAcWrHRwcQ71AoA0+21yC9VkqPNrn3
            w7OEg8gBqPjRlXBNb00QieNeGGSkXOoU6gFschR22Dzy
            -----END RSA PRIVATE KEY-----

        # openssl rsa -in jwt.pem -pubout
        publicKey: |
            -----BEGIN PUBLIC KEY-----
            MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmpvTtDgIkbUmVimQAmBh
            HDcrzqh1MttPntRVecSbA5VzXRZ04oPP1QgxyP9dNVve2ptRfW+zvk6oCJLQaqw5
            W3MOiX9yHxpugHm1lc9KjQmTiBlu4i7hmQxwVD8QjljYbXwxDwb4xn9lw0KXPjl9
            kL/JVc0PaKjMSRzDprxXWbfMhseWsSbG0VXFBIuStoqY13z0salkQTK81R+6WQAN
            k1woVbBQlUemw1l5y9I6Er2RK0/nw9ybDOc5dcUNJAk9jzYVg1GFulvk0RCirMHA
            2c8CZqjp7a90rFHbSN1tGpoOtdWqQRDSlDAYjj2rHWYs8ZpSlLHS1h77c2ZXqQJy
            zQIDAQAB
            -----END PUBLIC KEY-----

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

security:
  user:
    password: password

logging:
  level:
    org.springframework.security: DEBUG

# Datasource and JPA configuration to be used for storing the OAuth authorization details
# and token store
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/auth
    username: root
    password: password
    driver-class: com.mysql.jdbc.Driver

  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    show-sql: false
    hibernate:
      ddl-auto: create

---

spring:
  profiles: docker
# Datasource and JPA configuration to be used for storing the OAuth authorization details
# and token store
  datasource:
    url: jdbc:mysql://mysqldb:3306/auth
    username: root
    password: password
    driver-class: com.mysql.jdbc.Driver

  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    show-sql: false
    hibernate:
      ddl-auto: create
eureka:
# Register our microservices to Eureka using hostnames in a Docker environment will not work, they will all get
# one and the same hostname. Instead we configure them to use its IP address during registration with Eureka.
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://eurekaregistry:8761/eureka/
